{"version":3,"file":"BlinkIDWasmSDK.worker.js","sources":["../src/MicroblinkSDK/worker/Messages.ts","../src/MicroblinkSDK/Utils.ts","../src/MicroblinkSDK/LoadProgressUtils.ts","../src/MicroblinkSDK/worker/MicroblinkSDK.worker.ts","../src/worker.ts"],"sourcesContent":["import { CapturedFrame } from \"../FrameCapture\";\nimport { WasmSDKLoadSettings } from \"../WasmLoadSettings\";\n\nlet nextMessageID = 0;\n\nfunction getNextMessageID()\n{\n    const msgId = nextMessageID;\n    nextMessageID = nextMessageID + 1;\n    return msgId;\n}\n\n// ===================================== /\n// Request messages\n// ===================================== /\n\nexport interface RequestMessage\n{\n    readonly action: string;\n    readonly messageID: number;\n}\n\nexport interface TransferrableMessage\n{\n    getTransferrables(): Array< Transferable >;\n}\n\nabstract class BaseRequestMessage implements RequestMessage\n{\n    readonly action: string;\n\n    readonly messageID: number;\n\n    protected constructor( action: string )\n    {\n        this.action = action;\n        this.messageID = getNextMessageID();\n    }\n}\n\nexport class InitMessage extends BaseRequestMessage\n{\n    static readonly action: string = \"init\";\n\n    readonly wasmModuleName: string;\n\n    readonly licenseKey: string;\n\n    readonly userId: string;\n\n    readonly registerLoadCallback: boolean;\n\n    readonly allowHelloMessage: boolean;\n\n    readonly engineLocation: string;\n\n    constructor( wasmLoadSettings: WasmSDKLoadSettings, userId: string )\n    {\n        super( InitMessage.action );\n        this.wasmModuleName = wasmLoadSettings.wasmModuleName;\n        this.licenseKey = wasmLoadSettings.licenseKey;\n        this.userId = userId;\n        this.registerLoadCallback = wasmLoadSettings.loadProgressCallback !== null;\n        this.allowHelloMessage = wasmLoadSettings.allowHelloMessage;\n        this.engineLocation = wasmLoadSettings.engineLocation;\n    }\n}\n\nexport enum ParameterType\n{\n    Any,\n    Recognizer\n}\n\nexport interface WrappedParameter\n{\n    parameter: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n    type: ParameterType;\n}\n\nexport class InvokeFunction extends BaseRequestMessage\n{\n    static readonly action: string = \"invokeFunction\";\n\n    readonly funcName: string;\n\n    readonly params: Array< WrappedParameter >;\n\n    constructor( funcName: string, params: Array< WrappedParameter > )\n    {\n        super( InvokeFunction.action );\n        this.funcName = funcName;\n        this.params = params;\n    }\n}\n\nexport class CreateNewRecognizer extends BaseRequestMessage\n{\n    static readonly action: string = \"createNewNativeObject\";\n\n    readonly className: string;\n\n    readonly params: Array< WrappedParameter >;\n\n    constructor( className: string, params: Array< WrappedParameter > )\n    {\n        super( CreateNewRecognizer.action );\n        this.className = className;\n        this.params = params;\n    }\n}\n\nexport class CreateRecognizerRunner extends BaseRequestMessage\n{\n    static readonly action: string = \"createRecognizerRunner\";\n\n    readonly recognizerHandles: Array< number >;\n\n    readonly allowMultipleResults: boolean;\n\n    readonly registeredMetadataCallbacks: RegisteredMetadataCallbacks;\n\n    constructor\n    (\n        recognizerHandles           : Array< number >,\n        allowMultipleResults        : boolean,\n        registeredMetadataCallbacks : RegisteredMetadataCallbacks\n    )\n    {\n        super( CreateRecognizerRunner.action );\n        this.recognizerHandles = recognizerHandles;\n        this.allowMultipleResults = allowMultipleResults;\n        this.registeredMetadataCallbacks = registeredMetadataCallbacks;\n    }\n}\n\nexport class ReconfigureRecognizerRunner extends BaseRequestMessage\n{\n    static readonly action: string = \"reconfigureRecognizerRunner\";\n\n    readonly recognizerHandles: Array< number >;\n\n    readonly allowMultipleResults: boolean;\n\n    constructor( recognizerHandles: Array< number >, allowMultipleResults: boolean )\n    {\n        super( ReconfigureRecognizerRunner.action );\n        this.recognizerHandles = recognizerHandles;\n        this.allowMultipleResults = allowMultipleResults;\n    }\n}\n\nexport class DeleteRecognizerRunner extends BaseRequestMessage\n{\n    static readonly action: string = \"deleteRecognizerRunner\";\n\n    constructor()\n    {\n        super( DeleteRecognizerRunner.action );\n    }\n}\n\nexport class InvokeObjectMethod extends BaseRequestMessage\n{\n    static readonly action: string = \"invokeObject\";\n\n    readonly objectHandle: number;\n\n    readonly methodName: string;\n\n    readonly params: Array< WrappedParameter >;\n\n    constructor( objectHandle: number, methodName: string, params: Array< WrappedParameter > )\n    {\n        super( InvokeObjectMethod.action );\n        this.objectHandle = objectHandle;\n        this.methodName = methodName;\n        this.params = params;\n    }\n}\n\nexport class ProcessImage extends BaseRequestMessage implements TransferrableMessage\n{\n    static readonly action: string = \"processImage\";\n\n    readonly frame: CapturedFrame;\n\n    constructor( image: CapturedFrame )\n    {\n        super( ProcessImage.action );\n        this.frame = image;\n    }\n\n    getTransferrables(): Array< Transferable >\n    {\n        return [ this.frame.imageData.data.buffer ];\n    }\n}\n\nexport class ResetRecognizers extends BaseRequestMessage\n{\n    static readonly action: string = \"resetRecognizers\";\n\n    readonly hardReset: boolean\n\n    constructor( hardReset: boolean )\n    {\n        super( ResetRecognizers.action );\n        this.hardReset = hardReset;\n    }\n}\n\nexport class RegisteredMetadataCallbacks\n{\n    onDebugText       = false;\n\n    onDetectionFailed = false;\n\n    onQuadDetection   = false;\n\n    onPointsDetection = false;\n\n    onFirstSideResult = false;\n\n    onGlare           = false;\n}\n\nexport class RegisterMetadataCallbacks extends BaseRequestMessage\n{\n    static readonly action: string = \"registerMetadataCallbacks\";\n\n    readonly registeredMetadataCallbacks: RegisteredMetadataCallbacks;\n\n    constructor( registeredMetadataCallbacks: RegisteredMetadataCallbacks )\n    {\n        super( RegisterMetadataCallbacks.action );\n        this.registeredMetadataCallbacks = registeredMetadataCallbacks;\n    }\n}\n\nexport class SetDetectionOnly extends BaseRequestMessage\n{\n    static readonly action: string = \"setDetectionOnly\";\n\n    readonly detectionOnlyMode: boolean;\n\n    constructor( detectionOnlyMode: boolean )\n    {\n        super( SetDetectionOnly.action );\n        this.detectionOnlyMode = detectionOnlyMode;\n    }\n}\n\nexport class SetClearTimeoutCallback extends BaseRequestMessage\n{\n    static readonly action: string = \"setClearTimeoutCallback\";\n\n    readonly callbackNonEmpty: boolean;\n\n    constructor( callbackNonEmpty: boolean )\n    {\n        super( SetClearTimeoutCallback.action );\n        this.callbackNonEmpty = callbackNonEmpty;\n    }\n}\n\nexport class SetCameraPreviewMirrored extends BaseRequestMessage\n{\n    static readonly action: string = \"setCameraPreviewMirrored\";\n\n    readonly cameraPreviewMirrored: boolean\n\n    constructor( cameraPreviewMirrored: boolean )\n    {\n        super( SetCameraPreviewMirrored.action );\n        this.cameraPreviewMirrored = cameraPreviewMirrored;\n    }\n}\n\n// ===================================== /\n// Response messages\n// ===================================== /\n\nexport interface ResponseMessage\n{\n    readonly messageID: number;\n}\n\nexport class StatusMessage implements ResponseMessage\n{\n    readonly messageID: number;\n\n    readonly success: boolean = true;\n\n    readonly error: string | null = null;\n\n    constructor( msgID: number, success: boolean, error: string | null )\n    {\n        this.messageID = msgID;\n        this.success = success;\n        this.error = error;\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any,\n                  @typescript-eslint/explicit-module-boundary-types,\n                  @typescript-eslint/no-unsafe-assignment */\nexport class InvokeResultMessage extends StatusMessage\n{\n    readonly result: any;\n\n    constructor( msgID: number, result: any )\n    {\n        super( msgID, true, null );\n        this.result = result;\n    }\n}\n/* eslint-enable @typescript-eslint/no-explicit-any,\n                 @typescript-eslint/explicit-module-boundary-types,\n                 @typescript-eslint/no-unsafe-assignment */\n\nexport class ObjectCreatedMessage extends StatusMessage\n{\n    readonly objectHandle: number;\n\n    constructor( msgID: number, handle: number )\n    {\n        super( msgID, true, null );\n        this.objectHandle = handle;\n    }\n}\n\nexport class ImageProcessResultMessage extends StatusMessage\n{\n    readonly recognitionState: number;\n\n    constructor( msgID: number, recognitionState: number )\n    {\n        super( msgID, true, null );\n        this.recognitionState = recognitionState;\n    }\n}\n\n// ===================================== /\n// Load progress messages\n// ===================================== /\n\nexport class LoadProgressMessage\n{\n    readonly isLoadProgressMessage = true;\n\n    readonly progress: number;\n\n    constructor( progress: number )\n    {\n        this.progress = progress;\n    }\n}\n\n\n// ===================================== /\n// Metadata callback messages\n// ===================================== /\n\nexport enum MetadataCallback\n{\n    onDebugText,\n    onDetectionFailed,\n    onQuadDetection,\n    onPointsDetection,\n    onFirstSideResult,\n    clearTimeoutCallback,\n    onGlare\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport class InvokeCallbackMessage\n{\n    readonly isCallbackMessage: boolean = true;\n\n    readonly callbackType:      MetadataCallback;\n\n    readonly callbackParameters: any[];\n\n    constructor( callbackType: MetadataCallback, callbackParams: any[] )\n    {\n        this.callbackType       = callbackType;\n        this.callbackParameters = callbackParams;\n    }\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n","/**\n * Returns safe path, i.e. URL for given path and filename (file path).\n *\n * @param path      String representing file path.\n * @param fileName  String representing file name.\n * @returns String representing URL for specified resource.\n */\nexport function getSafePath( path: string, fileName: string ): string\n{\n    // Since this function is called by Emscripten module, make sure to set default values\n    path = path || \"\";\n    fileName = fileName || \"\";\n\n    if ( path === \"\" )\n    {\n        return fileName;\n    }\n    if ( path.endsWith( \"/\" ) )\n    {\n        if ( fileName.startsWith( \"/\" ) )\n        {\n            return path + fileName.substring( 1 );\n        }\n        return path + fileName;\n    }\n    if ( fileName.startsWith( \"/\" ) )\n    {\n        return path + fileName;\n    }\n    return path + \"/\" + fileName;\n}\n","export function convertEmscriptenStatusToProgress( emStatus: string ): number\n{\n    // roughly based on https://github.com/emscripten-core/emscripten/blob/1.39.11/src/shell.html#L1259\n    if ( emStatus === \"Running...\" )\n    {\n        // download has completed, wasm execution has started\n        return 100;\n    }\n    else if ( emStatus.length === 0 )\n    {\n        // empty message\n        return 0;\n    }\n\n    const regExp = RegExp( /([^(]+)\\((\\d+(\\.\\d+)?)\\/(\\d+)\\)/ );\n    const match = regExp.exec( emStatus );\n    if ( match )\n    {\n        const currentValue = parseInt( match[ 2 ] );\n        const maxValue = parseInt( match[ 4 ] );\n        return currentValue * 100 / maxValue;\n    }\n    else\n    {\n        // Cannot parse emscripten status\n        return NaN;\n    }\n}\n","import * as Messages from \"./Messages\";\nimport * as Utils from \"../Utils\";\n\nimport\n{\n    MetadataCallbacks,\n    DisplayablePoints,\n    DisplayableQuad\n} from \"../MetadataCallbacks\";\n\nimport { convertEmscriptenStatusToProgress } from \"../LoadProgressUtils\";\nimport { ClearTimeoutCallback } from \"../ClearTimeoutCallback\";\n\ninterface MessageWithParameters extends Messages.RequestMessage\n{\n    readonly params: Array< Messages.WrappedParameter >\n}\n\nexport default class MicroblinkWorker\n{\n    /* eslint-disable @typescript-eslint/no-unsafe-assignment,\n                      @typescript-eslint/no-explicit-any */\n    private context: Worker = self as any;\n\n    private wasmModule: any = null;\n\n    private nativeRecognizerRunner: any = null;\n\n    private objects: { [ key: number ] : any } = {};\n\n    private nextObjectHandle = 0;\n\n    private metadataCallbacks: MetadataCallbacks = {};\n\n    private clearTimeoutCallback: ClearTimeoutCallback | null = null;\n    /* eslint-enable @typescript-eslint/no-unsafe-assignment,\n                     @typescript-eslint/no-explicit-any */\n\n    constructor()\n    {\n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,\n                          @typescript-eslint/no-unsafe-member-access */\n        this.context.onmessage = ( event: MessageEvent ) =>\n        {\n            const msg = event.data;\n            switch( msg.action )\n            {\n                case Messages.InitMessage.action:\n                    this.processInitMessage( msg as Messages.InitMessage );\n                    break;\n                case Messages.InvokeFunction.action:\n                    this.processInvokeFunction( msg as Messages.InvokeFunction );\n                    break;\n                case Messages.CreateNewRecognizer.action:\n                    this.processCreateNewRecognizer( msg as Messages.CreateNewRecognizer );\n                    break;\n                case Messages.InvokeObjectMethod.action:\n                    this.processInvokeObject( msg as Messages.InvokeObjectMethod );\n                    break;\n                case Messages.CreateRecognizerRunner.action:\n                    this.processCreateRecognizerRunner( msg as Messages.CreateRecognizerRunner );\n                    break;\n                case Messages.ReconfigureRecognizerRunner.action:\n                    this.processReconfigureRecognizerRunner( msg as Messages.ReconfigureRecognizerRunner );\n                    break;\n                case Messages.DeleteRecognizerRunner.action:\n                    this.processDeleteRecognizerRunner( msg as Messages.DeleteRecognizerRunner );\n                    break;\n                case Messages.ProcessImage.action:\n                    void this.processImage( msg as Messages.ProcessImage );\n                    break;\n                case Messages.ResetRecognizers.action:\n                    this.resetRecognizers( msg as Messages.ResetRecognizers );\n                    break;\n                case Messages.SetDetectionOnly.action:\n                    this.setDetectionOnly( msg as Messages.SetDetectionOnly );\n                    break;\n                case Messages.SetCameraPreviewMirrored.action:\n                    this.setCameraPreviewMirrored( msg as Messages.SetCameraPreviewMirrored );\n                    break;\n                case Messages.RegisterMetadataCallbacks.action:\n                    this.registerMetadataCallbacks( msg as Messages.RegisterMetadataCallbacks );\n                    break;\n                case Messages.SetClearTimeoutCallback.action:\n                    this.registerClearTimeoutCallback( msg as Messages.SetClearTimeoutCallback );\n                    break;\n                default:\n                    throw new Error( \"Unknown message action: \" + JSON.stringify( msg.action ) );\n            }\n        };\n        /* eslint-enable @typescript-eslint/no-unsafe-assignment,\n                         @typescript-eslint/no-unsafe-member-access */\n    }\n\n    private getNextObjectHandle()\n    {\n        const handle = this.nextObjectHandle;\n        this.nextObjectHandle = this.nextObjectHandle + 1;\n        return handle;\n    }\n\n    private notifyError( originalMessage: Messages.RequestMessage, error: string )\n    {\n        this.context.postMessage\n        (\n            new Messages.StatusMessage\n            (\n                originalMessage.messageID,\n                false,\n                error\n            )\n        );\n    }\n\n    private notifySuccess( originalMessage: Messages.RequestMessage )\n    {\n        this.context.postMessage( new Messages.StatusMessage( originalMessage.messageID, true, null ) );\n    }\n\n    /* eslint-disable @typescript-eslint/no-explicit-any,\n                      @typescript-eslint/no-unsafe-assignment,\n                      @typescript-eslint/no-unsafe-member-access,\n                      @typescript-eslint/no-unsafe-return */\n    private unwrapParameters( msgWithParams: MessageWithParameters ): Array< any >\n    {\n        const params: Array< any > = [];\n        for ( const wrappedParam of msgWithParams.params )\n        {\n            let unwrappedParam = wrappedParam.parameter;\n            if ( wrappedParam.type === Messages.ParameterType.Recognizer )\n            {\n                unwrappedParam = this.objects[ unwrappedParam ];\n                if ( unwrappedParam === undefined )\n                {\n                    this.notifyError( msgWithParams, \"Cannot find object with handle: undefined\" );\n                }\n            }\n            params.push( unwrappedParam );\n        }\n        return params;\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any,\n                     @typescript-eslint/no-unsafe-assignment,\n                     @typescript-eslint/no-unsafe-member-access,\n                     @typescript-eslint/no-unsafe-return */\n\n    /* eslint-disable @typescript-eslint/no-explicit-any,\n                      @typescript-eslint/no-unsafe-assignment,\n                      @typescript-eslint/no-unsafe-member-access */\n    private scanForTransferrables( object: any ): Array< Transferable >\n    {\n        if ( typeof object === \"object\" )\n        {\n            const keys = Object.keys( object );\n            const transferrables: Array< Transferable > = [];\n\n            for ( const key of keys )\n            {\n                const data = object[ key ];\n                if ( data instanceof ImageData )\n                {\n                    transferrables.push( data.data.buffer );\n                }\n                else if ( data instanceof Uint8Array )\n                {\n                    transferrables.push( data.buffer );\n                }\n                else if ( data !== null && typeof data === \"object\" )\n                {\n                    transferrables.push( ...this.scanForTransferrables( data ) );\n                }\n            }\n            return transferrables;\n        }\n        else\n        {\n            return [];\n        }\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any,\n                     @typescript-eslint/no-unsafe-assignment,\n                     @typescript-eslint/no-unsafe-member-access */\n\n    // message process functions\n\n    /* eslint-disable @typescript-eslint/no-explicit-any,\n                      @typescript-eslint/no-unsafe-assignment,\n                      @typescript-eslint/no-unsafe-call,\n                      @typescript-eslint/no-unsafe-member-access */\n    private processInitMessage( msg: Messages.InitMessage )\n    {\n        // See https://emscripten.org/docs/api_reference/module.html\n        const module = {\n            locateFile: ( path: string ) =>\n            {\n                return Utils.getSafePath( msg.engineLocation, path );\n            }\n        };\n\n        if ( msg.registerLoadCallback )\n        {\n            Object.assign( module, {\n                setStatus: ( text: string ) =>\n                {\n                    const msg = new Messages.LoadProgressMessage( convertEmscriptenStatusToProgress( text ) );\n                    this.context.postMessage( msg );\n                }\n            } );\n        }\n\n        try\n        {\n            const jsName = msg.wasmModuleName + \".js\";\n            const jsPath = Utils.getSafePath( msg.engineLocation, jsName );\n            importScripts( jsPath );\n            const loaderFunc = ( self as { [key: string]: any } )[ msg.wasmModuleName ];\n            loaderFunc( module ).then\n            (\n                ( mbWasmModule: any ) =>\n                {\n                    try\n                    {\n                        mbWasmModule.initializeWithLicenseKey( msg.licenseKey, msg.userId, msg.allowHelloMessage );\n                        this.wasmModule = mbWasmModule;\n                        this.notifySuccess( msg );\n                    }\n                    catch ( licenseError )\n                    {\n                        this.notifyError( msg, licenseError );\n                    }\n                },\n                ( error: any ) =>\n                {\n                    // Failed to load WASM in web worker due to error\n                    this.notifyError( msg, error );\n                }\n            );\n        }\n        catch( error )\n        {\n            // Failed to load WASM in web worker due to error\n            this.notifyError( msg, error );\n        }\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any,\n                     @typescript-eslint/no-unsafe-assignment,\n                     @typescript-eslint/no-unsafe-call,\n                     @typescript-eslint/no-unsafe-member-access */\n\n    /* eslint-disable @typescript-eslint/no-unsafe-assignment,\n                      @typescript-eslint/no-unsafe-call,\n                      @typescript-eslint/no-unsafe-member-access */\n    private processInvokeFunction( msg: Messages.InvokeFunction ): void\n    {\n        if ( this.wasmModule === null )\n        {\n            this.notifyError( msg, \"WASM module is not initialized!\" );\n            return;\n        }\n\n        const funcName = msg.funcName;\n        const params = this.unwrapParameters( msg );\n\n        try\n        {\n            const invocationResult = this.wasmModule[ funcName ]( ...params );\n            this.context.postMessage\n            (\n                new Messages.InvokeResultMessage\n                (\n                    msg.messageID,\n                    invocationResult\n                )\n            );\n        }\n        catch ( error )\n        {\n            this.notifyError( msg, error );\n        }\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-assignment,\n                     @typescript-eslint/no-unsafe-call,\n                     @typescript-eslint/no-unsafe-member-access */\n\n    /* eslint-disable @typescript-eslint/no-unsafe-assignment,\n                      @typescript-eslint/no-unsafe-call,\n                      @typescript-eslint/no-unsafe-member-access */\n    private processCreateNewRecognizer( msg: Messages.CreateNewRecognizer )\n    {\n        if ( this.wasmModule === null )\n        {\n            this.notifyError( msg, \"WASM module is not initialized!\" );\n            return;\n        }\n\n        const className = msg.className;\n        const params = this.unwrapParameters( msg );\n\n        try\n        {\n            const createdObject = new this.wasmModule[ className ]( ...params );\n            const newHandle = this.getNextObjectHandle();\n            this.objects[ newHandle ] = createdObject;\n\n            this.context.postMessage\n            (\n                new Messages.ObjectCreatedMessage( msg.messageID, newHandle )\n            );\n        }\n        catch ( error )\n        {\n            this.notifyError( msg, error );\n        }\n    }\n    /* eslint-disable @typescript-eslint/no-unsafe-assignment,\n                      @typescript-eslint/no-unsafe-call,\n                      @typescript-eslint/no-unsafe-member-access */\n\n    /* eslint-disable @typescript-eslint/no-unsafe-assignment,\n                      @typescript-eslint/no-explicit-any,\n                      @typescript-eslint/no-unsafe-return */\n    private getRecognizers( recognizerHandles: Array< number > ): Array< any >\n    {\n        const recognizers = [];\n        for ( const handle of recognizerHandles )\n        {\n            const recognizer = this.objects[ handle ];\n            recognizers.push( recognizer );\n        }\n        return recognizers;\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-assignment,\n                     @typescript-eslint/no-explicit-any,\n                     @typescript-eslint/no-unsafe-return */\n\n    private processCreateRecognizerRunner( msg: Messages.CreateRecognizerRunner )\n    {\n        if ( this.wasmModule === null )\n        {\n            this.notifyError( msg, \"WASM module is not initialized!\" );\n        }\n        else if ( this.nativeRecognizerRunner !== null )\n        {\n            this.notifyError( msg, \"Recognizer runner is already created! Multiple instances are not allowed!\" );\n        }\n        else\n        {\n            this.setupMetadataCallbacks( msg.registeredMetadataCallbacks );\n            try\n            {\n                const recognizers = this.getRecognizers( msg.recognizerHandles );\n\n                /* eslint-disable @typescript-eslint/no-unsafe-assignment,\n                                  @typescript-eslint/no-unsafe-member-access,\n                                  @typescript-eslint/no-unsafe-call */\n                this.nativeRecognizerRunner = new this.wasmModule.RecognizerRunner\n                (\n                    recognizers,\n                    msg.allowMultipleResults,\n                    this.metadataCallbacks\n                );\n                /* eslint-enable @typescript-eslint/no-unsafe-assignment,\n                                 @typescript-eslint/no-unsafe-member-access,\n                                 @typescript-eslint/no-unsafe-call */\n\n                this.notifySuccess( msg );\n            }\n            catch ( error )\n            {\n                this.notifyError( msg, error );\n            }\n        }\n    }\n\n    private processReconfigureRecognizerRunner( msg: Messages.ReconfigureRecognizerRunner )\n    {\n        if ( this.wasmModule === null )\n        {\n            this.notifyError( msg, \"WASM module is not initialized!\" );\n        }\n        else if ( this.nativeRecognizerRunner === null )\n        {\n            this.notifyError( msg, \"Recognizer runner is not created! There is nothing to reconfigure!\" );\n        }\n        else\n        {\n            try\n            {\n                const recognizers = this.getRecognizers( msg.recognizerHandles );\n\n                /* eslint-disable @typescript-eslint/no-unsafe-assignment,\n                                  @typescript-eslint/no-unsafe-member-access,\n                                  @typescript-eslint/no-unsafe-call */\n                this.nativeRecognizerRunner.reconfigureRecognizers\n                (\n                    recognizers,\n                    msg.allowMultipleResults\n                );\n                /* eslint-enable @typescript-eslint/no-unsafe-assignment,\n                                 @typescript-eslint/no-unsafe-member-access,\n                                 @typescript-eslint/no-unsafe-call */\n\n                this.notifySuccess( msg );\n            }\n            catch( error )\n            {\n                this.notifyError( msg, error );\n            }\n        }\n    }\n\n    private processDeleteRecognizerRunner( msg: Messages.DeleteRecognizerRunner )\n    {\n        if ( this.nativeRecognizerRunner === null )\n        {\n            this.notifyError( msg, \"Recognizer runner is already deleted!\" );\n            return;\n        }\n\n        try\n        {\n            /* eslint-disable @typescript-eslint/no-unsafe-call,\n                              @typescript-eslint/no-unsafe-member-access */\n            this.nativeRecognizerRunner.delete();\n            this.nativeRecognizerRunner = null;\n            this.notifySuccess( msg );\n            /* eslint-enable @typescript-eslint/no-unsafe-call,\n                             @typescript-eslint/no-unsafe-member-access */\n        }\n        catch( error )\n        {\n            this.notifyError( msg, error );\n        }\n    }\n\n    private processInvokeObject( msg: Messages.InvokeObjectMethod )\n    {\n        try\n        {\n            const objectHandle = msg.objectHandle;\n            const methodName = msg.methodName;\n            const params = this.unwrapParameters( msg );\n\n            const object = this.objects[ objectHandle ]; // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n            if ( object === undefined )\n            {\n                this.notifyError( msg, \"Cannot find object with handle: \" + objectHandle.toString() );\n            }\n            else\n            {\n                /* eslint-disable @typescript-eslint/no-unsafe-assignment,\n                                  @typescript-eslint/no-unsafe-member-access,\n                                  @typescript-eslint/no-unsafe-call */\n                const result = object[ methodName ]( ...params );\n                /* eslint-enable @typescript-eslint/no-unsafe-assignment,\n                                @typescript-eslint/no-unsafe-member-access,\n                                @typescript-eslint/no-unsafe-call */\n                const transferrables = this.scanForTransferrables( result );\n                if ( methodName === \"delete\" )\n                {\n                    delete this.objects[ objectHandle ];\n                }\n\n                this.context.postMessage\n                (\n                    new Messages.InvokeResultMessage( msg.messageID, result ),\n                    transferrables\n                );\n            }\n        }\n        catch ( error )\n        {\n            this.notifyError( msg, error );\n        }\n    }\n\n    private processImage( msg: Messages.ProcessImage )\n    {\n        if ( this.nativeRecognizerRunner === null )\n        {\n            this.notifyError( msg, \"Recognizer runner is not initialized! Cannot process image!\" );\n            return;\n        }\n\n        try\n        {\n            const image = msg.frame;\n            /* eslint-disable @typescript-eslint/no-unsafe-call,\n                              @typescript-eslint/no-unsafe-member-access,\n                              @typescript-eslint/no-unsafe-assignment */\n            const result: number = this.nativeRecognizerRunner.processImage( image );\n            /* eslint-enable @typescript-eslint/no-unsafe-call,\n                             @typescript-eslint/no-unsafe-member-access,\n                             @typescript-eslint/no-unsafe-assignment */\n\n            this.context.postMessage( new Messages.ImageProcessResultMessage( msg.messageID, result ) );\n        }\n        catch( error )\n        {\n            this.notifyError( msg, error );\n        }\n    }\n\n    private resetRecognizers( msg: Messages.ResetRecognizers )\n    {\n        if ( this.nativeRecognizerRunner === null )\n        {\n            this.notifyError( msg, \"Recognizer runner is not initialized! Cannot process image!\" );\n            return;\n        }\n\n        try\n        {\n            /* eslint-disable @typescript-eslint/no-unsafe-call,\n                              @typescript-eslint/no-unsafe-member-access */\n            this.nativeRecognizerRunner.resetRecognizers( msg.hardReset );\n            this.notifySuccess( msg );\n            /* eslint-enable @typescript-eslint/no-unsafe-call,\n                             @typescript-eslint/no-unsafe-member-access */\n        }\n        catch ( error )\n        {\n            this.notifyError( msg, error );\n        }\n    }\n\n    private setDetectionOnly( msg: Messages.SetDetectionOnly )\n    {\n        if ( this.nativeRecognizerRunner === null )\n        {\n            this.notifyError( msg, \"Recognizer runner is not initialized! Cannot process image!\" );\n            return;\n        }\n\n        try\n        {\n            /* eslint-disable @typescript-eslint/no-unsafe-call,\n                              @typescript-eslint/no-unsafe-member-access */\n            this.nativeRecognizerRunner.setDetectionOnlyMode( msg.detectionOnlyMode );\n            this.notifySuccess( msg );\n            /* eslint-enable @typescript-eslint/no-unsafe-call,\n                             @typescript-eslint/no-unsafe-member-access */\n        }\n        catch ( error )\n        {\n            this.notifyError( msg, error );\n        }\n    }\n\n    private setCameraPreviewMirrored( msg: Messages.SetCameraPreviewMirrored )\n    {\n        if ( this.nativeRecognizerRunner === null )\n        {\n            this.notifyError( msg, \"Recognizer runner is not initialized! Cannot process image!\" );\n            return;\n        }\n\n        try\n        {\n            /* eslint-disable @typescript-eslint/no-unsafe-call,\n                              @typescript-eslint/no-unsafe-member-access */\n            this.nativeRecognizerRunner.setCameraPreviewMirrored( msg.cameraPreviewMirrored );\n            this.notifySuccess( msg );\n            /* eslint-enable @typescript-eslint/no-unsafe-call,\n                             @typescript-eslint/no-unsafe-member-access */\n        }\n        catch ( error )\n        {\n            this.notifyError( msg, error );\n        }\n    }\n\n    private setupMetadataCallbacks( registeredMetadataCallbacks: Messages.RegisteredMetadataCallbacks )\n    {\n        // setup local callbacks\n        if ( registeredMetadataCallbacks.onDebugText )\n        {\n            this.metadataCallbacks.onDebugText = ( debugText: string ) =>\n            {\n                const msg = new Messages.InvokeCallbackMessage( Messages.MetadataCallback.onDebugText, [ debugText ] );\n                this.context.postMessage( msg );\n            };\n        }\n        else\n        {\n            delete this.metadataCallbacks.onDebugText;\n        }\n\n        if ( registeredMetadataCallbacks.onDetectionFailed )\n        {\n            this.metadataCallbacks.onDetectionFailed = () =>\n            {\n                const msg = new Messages.InvokeCallbackMessage( Messages.MetadataCallback.onDetectionFailed, [] );\n                this.context.postMessage( msg );\n            };\n        }\n        else\n        {\n            delete this.metadataCallbacks.onDetectionFailed;\n        }\n\n        if ( registeredMetadataCallbacks.onPointsDetection )\n        {\n            this.metadataCallbacks.onPointsDetection = ( pointSet: DisplayablePoints ) =>\n            {\n                const onPointsDetection = Messages.MetadataCallback.onPointsDetection;\n                const msg = new Messages.InvokeCallbackMessage( onPointsDetection, [ pointSet ] );\n                this.context.postMessage( msg );\n            };\n        }\n        else\n        {\n            delete this.metadataCallbacks.onPointsDetection;\n        }\n\n        if ( registeredMetadataCallbacks.onQuadDetection )\n        {\n            this.metadataCallbacks.onQuadDetection = ( quad: DisplayableQuad ) =>\n            {\n                const msg = new Messages.InvokeCallbackMessage( Messages.MetadataCallback.onQuadDetection, [ quad ] );\n                this.context.postMessage( msg );\n            };\n        }\n        else\n        {\n            delete this.metadataCallbacks.onQuadDetection;\n        }\n\n        if ( registeredMetadataCallbacks.onFirstSideResult )\n        {\n            this.metadataCallbacks.onFirstSideResult = () =>\n            {\n                const msg = new Messages.InvokeCallbackMessage( Messages.MetadataCallback.onFirstSideResult, [] );\n                this.context.postMessage( msg );\n            };\n        }\n        else\n        {\n            delete this.metadataCallbacks.onFirstSideResult;\n        }\n\n        if ( registeredMetadataCallbacks.onGlare )\n        {\n            this.metadataCallbacks.onGlare = ( hasGlare: boolean ) =>\n            {\n                const msg = new Messages.InvokeCallbackMessage( Messages.MetadataCallback.onGlare, [ hasGlare ] );\n                this.context.postMessage( msg );\n            };\n        }\n        else\n        {\n            delete this.metadataCallbacks.onGlare;\n        }\n    }\n\n    private registerMetadataCallbacks( msg: Messages.RegisterMetadataCallbacks )\n    {\n        if ( this.nativeRecognizerRunner === null )\n        {\n            this.notifyError( msg, \"Recognizer runner is not initialized! Cannot process image!\" );\n            return;\n        }\n\n        this.setupMetadataCallbacks( msg.registeredMetadataCallbacks );\n        try\n        {\n            /* eslint-disable @typescript-eslint/no-unsafe-call,\n                              @typescript-eslint/no-unsafe-member-access */\n            this.nativeRecognizerRunner.setJSDelegate( this.metadataCallbacks );\n            this.notifySuccess( msg );\n            /* eslint-enable @typescript-eslint/no-unsafe-call,\n                             @typescript-eslint/no-unsafe-member-access */\n        }\n        catch( error )\n        {\n            this.notifyError( msg, error );\n        }\n    }\n\n    private registerClearTimeoutCallback( msg: Messages.SetClearTimeoutCallback )\n    {\n        if ( this.nativeRecognizerRunner === null )\n        {\n            this.notifyError( msg, \"Recognizer runner is not initialized! Cannot process image!\" );\n            return;\n        }\n\n        if ( msg.callbackNonEmpty )\n        {\n            this.clearTimeoutCallback = {\n                onClearTimeout: () =>\n                {\n                    const clearTimeoutCallback = Messages.MetadataCallback.clearTimeoutCallback;\n                    const msg = new Messages.InvokeCallbackMessage( clearTimeoutCallback, [] );\n                    this.context.postMessage( msg );\n                }\n            };\n        }\n        else\n        {\n            this.clearTimeoutCallback = null;\n        }\n\n        try\n        {\n            /* eslint-disable @typescript-eslint/no-unsafe-call,\n                              @typescript-eslint/no-unsafe-member-access */\n            this.nativeRecognizerRunner.setClearTimeoutCallback( this.clearTimeoutCallback );\n            this.notifySuccess( msg );\n            /* eslint-enable @typescript-eslint/no-unsafe-call,\n                             @typescript-eslint/no-unsafe-member-access */\n        }\n        catch( error )\n        {\n            this.notifyError( msg, error );\n        }\n    }\n}\n","import MicroblinkWorker from \"./MicroblinkSDK/worker/MicroblinkSDK.worker\";\n\nnew MicroblinkWorker();\n"],"names":["Messages.InitMessage","Messages.InvokeFunction","Messages.CreateNewRecognizer","Messages.InvokeObjectMethod","Messages.CreateRecognizerRunner","Messages.ReconfigureRecognizerRunner","Messages.DeleteRecognizerRunner","Messages.ProcessImage","Messages.ResetRecognizers","Messages.SetDetectionOnly","Messages.SetCameraPreviewMirrored","Messages.RegisterMetadataCallbacks","Messages.SetClearTimeoutCallback","Messages.StatusMessage","Messages.ParameterType","Utils.getSafePath","Messages.LoadProgressMessage","Messages.InvokeResultMessage","Messages.ObjectCreatedMessage","Messages.ImageProcessResultMessage","Messages.InvokeCallbackMessage","Messages.MetadataCallback"],"mappings":"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"}